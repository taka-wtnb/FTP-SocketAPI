Program specs:

1. Write the ftserver and the ftclient programs.
2. ftserver starts on Host A, and validates command-line parameters (<SERVER_PORT>).
3. ftserver waits on <PORTNUM> for a client request.
4. ftclient starts on Host B, and validates any pertinent command-line parameters.
(<SERVER_HOST>, <SERVER_PORT>, <COMMAND>, <FILENAME>, <DATA_PORT>, etc…)
5. ftserver and ftclient establish a TCP control connection on <SERVER_PORT>. (For the remainder of this description, call this connection P)
6. ftserver waits on connection P for ftclient to send a command.
7. ftclient sends a command (-l (list) or -g <FILENAME> (get)) on connection P.
8. ftserver receives command on connection P.

If ftclient sent an invalid command
• ftserver sends an error message to ftclient on connection P, and ftclient
displays the message on-screen.

otherwise
• ftserver initiates a TCP data connection with ftclient on <DATA_PORT>.
(Call this connection Q)

• If ftclient has sent the -l command, ftserver sends its directory to ftclient
on connection Q, and ftclient displays the directory on-screen.

• If ftclient has sent -g <FILENAME>, ftserver validates FILENAME, and

either
- sends the contents of FILENAME on connection Q. ftclient saves the
file in the current default directory (handling "duplicate file name" error
if necessary), and displays a "transfer complete" message on-screen
or
- sends an appropriate error message (“File not found”, etc.) to ftclient on
connection P, and ftclient displays the message on-screen.

• ftserver closes connection Q (don’t leave open sockets).

9. ftclient closes connection P (don’t leave open sockets!) and terminates.
10. ftserver repeats from 2 (above) until terminated by a supervisor (SIGINT).


Program requirements:

1. ftserver must be written in C/C++.
2. ftclient must be written in Java or Python.
3. Of course, your program must be well-modularized and well-documented.
4. You may not use sendfile or any other predefined function that makes the problem trivial.